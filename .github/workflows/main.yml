name: Build and Push Docker Images

on:
  push:
    branches:
      - main # Triggers on commits to the main branch. Modify this if needed.

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the repository
      - name: Check out repository
        uses: actions/checkout@v2

      # Step 2: Set up Python and run tests
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Cache TA-Lib installation
        uses: actions/cache@v3
        with:
          path: ~/ta-lib
          key: ta-lib-0.6.4-${{ runner.os }}

      - name: Install TA-Lib C library
        run: |
          if [ ! -d "~/ta-lib" ]; then
            wget http://prdownloads.sourceforge.net/ta-lib/ta-lib-0.6.4-src.tar.gz
            tar -xzf ta-lib-0.6.4-src.tar.gz
            cd ta-lib-0.6.4/
            ./configure --prefix=$HOME/ta-lib
            make
            make install
            cd ..
            rm -rf ta-lib-0.6.4 ta-lib-0.6.4-src.tar.gz
          fi

          # Set environment variables for TA-Lib
          echo "TA_LIBRARY_PATH=$HOME/ta-lib/lib" >> $GITHUB_ENV
          echo "TA_INCLUDE_PATH=$HOME/ta-lib/include" >> $GITHUB_ENV
          echo "LD_LIBRARY_PATH=$HOME/ta-lib/lib:$LD_LIBRARY_PATH" >> $GITHUB_ENV

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          # Install TA-Lib Python package first
          pip install TA-Lib>=0.6.3
          # Install other requirements
          pip install -r requirements.txt
        env:
          TA_LIBRARY_PATH: ${{ env.TA_LIBRARY_PATH }}
          TA_INCLUDE_PATH: ${{ env.TA_INCLUDE_PATH }}

      - name: Run tests
        id: run_tests
        run: |
          # Run all tests now that we've fixed the issues
          python test.py
        continue-on-error: false # Make the build fail if tests fail
        env:
          LD_LIBRARY_PATH: ${{ env.LD_LIBRARY_PATH }}
          LOGFIRE_TOKEN: ${{ secrets.LOGFIRE_TOKEN }}
          MOSEK_LICENSE_CONTENT: ${{ secrets.MOSEK_LICENSE_CONTENT }}

      # Step 3: Log in to Docker Hub (only runs if tests pass)
      - name: Log in to Docker Hub
        if: success()
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 4: Set up Docker Buildx (for multi-platform support)
      - name: Set up Docker Buildx
        if: success()
        uses: docker/setup-buildx-action@v2

      # Step 5: Build and push backend image
      - name: Build and push backend image
        if: success()
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile # Dockerfile for backend in the root directory
          push: true
          tags: |
            sprx7767/ind_portfolio_optimization-backend:latest
            sprx7767/ind_portfolio_optimization-backend:${{ github.sha }}
          build-args: |
            MOSEK_LICENSE_CONTENT=${{ secrets.MOSEK_LICENSE_CONTENT }}
            LOGFIRE_TOKEN=${{ secrets.LOGFIRE_TOKEN }}

      # Step 6: Deploy to EC2 instance (after backend push)
      - name: Set up SSH
        if: success()
        run: |
          mkdir -p ~/.ssh
          # Save the SSH key
          echo "${{ secrets.AWS_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ec2-18-191-144-215.us-east-2.compute.amazonaws.com >> ~/.ssh/known_hosts

      - name: Run deployment script
        if: success()
        run: ssh -i ~/.ssh/id_rsa ec2-user@ec2-18-191-144-215.us-east-2.compute.amazonaws.com 'bash /home/ec2-user/clean_and_run.sh'
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      # Step 7: Build and push frontend image
      - name: Build and push frontend image
        if: success()
        uses: docker/build-push-action@v4
        with:
          context: ./stock-search-app # Path to frontend directory
          file: ./stock-search-app/Dockerfile # Dockerfile for frontend
          push: true
          tags: |
            sprx7767/ind_portfolio_optimization-frontend:latest
            sprx7767/ind_portfolio_optimization-frontend:${{ github.sha }}
